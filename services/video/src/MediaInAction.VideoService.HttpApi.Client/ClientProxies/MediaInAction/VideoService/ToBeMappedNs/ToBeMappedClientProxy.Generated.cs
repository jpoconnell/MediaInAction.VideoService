// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using MediaInAction.VideoService.ToBeMappedNs;
using MediaInAction.VideoService.ToBeMappedNs.Dtos;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace MediaInAction.VideoService.ToBeMappedNs;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IToBeMappedAppService), typeof(ToBeMappedClientProxy))]
public partial class ToBeMappedClientProxy : ClientProxyBase<IToBeMappedAppService>, IToBeMappedAppService
{
    public virtual async Task<ToBeMappedDto> GetAsync(Guid id)
    {
        return await RequestAsync<ToBeMappedDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<ToBeMappedDto> CreateAsync(ToBeMappedCreateDto input)
    {
        return await RequestAsync<ToBeMappedDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(ToBeMappedCreateDto), input }
        });
    }

    public virtual async Task<List<ToBeMappedDto>> GetToBeMappedsAsync(GetToBeMappedsInput getToBeMappedInput)
    {
        return await RequestAsync<List<ToBeMappedDto>>(nameof(GetToBeMappedsAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetToBeMappedsInput), getToBeMappedInput }
        });
    }

    public virtual async Task<ToBeMappedDto> GetToBeMappedAsync(GetToBeMappedInput input)
    {
        return await RequestAsync<ToBeMappedDto>(nameof(GetToBeMappedAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetToBeMappedInput), input }
        });
    }

    public virtual async Task<PagedResultDto<ToBeMappedDto>> GetListPagedAsync(GetToBeMappedsInput input)
    {
        return await RequestAsync<PagedResultDto<ToBeMappedDto>>(nameof(GetListPagedAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetToBeMappedsInput), input }
        });
    }
}
