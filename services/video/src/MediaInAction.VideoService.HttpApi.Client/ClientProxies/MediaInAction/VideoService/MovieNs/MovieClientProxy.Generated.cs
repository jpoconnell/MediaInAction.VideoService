// This file is automatically generated by ABP framework to use MVC Controllers from CSharp
using MediaInAction.VideoService.MovieNs;
using MediaInAction.VideoService.MovieNs.Dtos;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.DependencyInjection;
using Volo.Abp.Http.Client;
using Volo.Abp.Http.Client.ClientProxying;
using Volo.Abp.Http.Modeling;

// ReSharper disable once CheckNamespace
namespace MediaInAction.VideoService.MovieNs;

[Dependency(ReplaceServices = true)]
[ExposeServices(typeof(IMovieAppService), typeof(MovieClientProxy))]
public partial class MovieClientProxy : ClientProxyBase<IMovieAppService>, IMovieAppService
{
    public virtual async Task<MovieDto> GetAsync(Guid id)
    {
        return await RequestAsync<MovieDto>(nameof(GetAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<MovieDto> CreateAsync(MovieCreateDto input)
    {
        return await RequestAsync<MovieDto>(nameof(CreateAsync), new ClientProxyRequestTypeValue
        {
            { typeof(MovieCreateDto), input }
        });
    }

    public virtual async Task<List<MovieDto>> GetMoviesAsync(GetMoviesInput input)
    {
        return await RequestAsync<List<MovieDto>>(nameof(GetMoviesAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetMoviesInput), input }
        });
    }

    public virtual async Task<MovieDto> GetByMovieNameAsync(string name)
    {
        return await RequestAsync<MovieDto>(nameof(GetByMovieNameAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), name }
        });
    }

    public virtual async Task SetAsInActiveAsync(Guid id)
    {
        await RequestAsync(nameof(SetAsInActiveAsync), new ClientProxyRequestTypeValue
        {
            { typeof(Guid), id }
        });
    }

    public virtual async Task<PagedResultDto<MovieDto>> GetListPagedAsync(GetMoviesInput input)
    {
        return await RequestAsync<PagedResultDto<MovieDto>>(nameof(GetListPagedAsync), new ClientProxyRequestTypeValue
        {
            { typeof(GetMoviesInput), input }
        });
    }

    public virtual async Task<DashboardDto> GetDashboardAsync(DashboardInput input)
    {
        return await RequestAsync<DashboardDto>(nameof(GetDashboardAsync), new ClientProxyRequestTypeValue
        {
            { typeof(DashboardInput), input }
        });
    }

    public virtual async Task<MovieDto> GetMovieAsync(string newMovieName, int newMovieFirstAiredYear)
    {
        return await RequestAsync<MovieDto>(nameof(GetMovieAsync), new ClientProxyRequestTypeValue
        {
            { typeof(string), newMovieName },
            { typeof(int), newMovieFirstAiredYear }
        });
    }
}
